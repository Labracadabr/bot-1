import json
import os
import random
from datetime import datetime

# —Ñ–∞–π–ª –ª–æ–≥–æ–≤
logs = 'logs.tsv'
if not os.path.isfile(logs):
    with open(logs, 'w', encoding='utf-8') as f:
        print('–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω:', logs)
        print('\t'.join(('Time', 'User', 'Action')), file=f)

# –ò–≥—Ä–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ, –ø—Ä–∞–≤–∏–ª–∞ –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
with open("cities_rus.json", "r", encoding='utf-8') as f:
    cities = json.load(f)

# –î–æ–ø—É—Å—Ç–∏–º—ã–µ –ø–µ—Ä–≤—ã–µ –±—É–∫–≤—ã. –¢—É—Ç –≤—Å–µ –∫—Ä–æ–º–µ –™ –¨
first_letters = [
    '–∞', '–±', '–≤', '–≥', '–¥', '–µ', '–∂', '–∑', '–∏', '–π', '–∫', '–ª', '–º', '–Ω', '–æ', '–ø', '—Ä', '—Å', '—Ç', '—É', '—Ñ', '—Ö', '—Ü',
    '—á', '—à', '—â', '—ã', '—ç', '—é', '—è']

# —Å–∫–æ–ª—å–∫–æ –∑–Ω–∞–µ–º –≥–æ—Ä–æ–¥–æ–≤
dlina = 0
for i in cities:
    dlina += len(cities.get(i))

book: dict = {}


# –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –±—É–∫–≤—É, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Å–ª–µ–¥ —Å–ª–æ–≤–æ
def rule(w):
    w = str(w)
    for k in range(len(w)):
        if w[-k - 1] in first_letters:
            return w[-k - 1]

def log(file, key, item):
    key = str(key)
    t = str(datetime.now()).split('.')[0]
    # —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ csv
    try:
        with open(file, 'a', encoding='utf-8') as f:
            print('\t'.join((t, str(key), repr(item))), file=f)
    except Exception as e:
        item += f'\nüî¥–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏:\n{e}'

    # –¥—É–±–ª–∏—Ä–æ–≤–∞—Ç—å –ª–æ–≥–∏ –≤ –∫–æ–Ω—Å–æ–ª—å
    log_text = str(key)+' '+str(item)
    print(t.split()[-1], log_text)


#  –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ >random> –ù–æ–≤**–∏–±*—Ä—Å–∫
def podskazka(word):
    l = len(word)
    if l < 7:
        stars = 1
    elif l == 8:
        stars = 2
    elif l > 13:
        stars = 4
    else:
        stars = 3

    hidden_letters = "*" * (len(word) - 2)  # —Å–∫—Ä—ã—Ç—ã–µ —Å–∏–º–≤–æ–ª—ã *

    # –≤—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏ –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è –±—É–∫–≤
    indices = random.sample(range(1, len(word) - 1), stars)

    # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–Ω–æ–µ —Å–ª–æ–≤–æ
    new_word = ""
    for i in range(len(word)):
        if i in indices:
            new_word += hidden_letters[i-1]
        else:
            new_word += word[i]

    return new_word


#  –ü–∞–ª–∏—Ç –∞–¥–º–∏–Ω—É –¥–µ–π—Å—Ç–≤–∏—è —é–∑–µ—Ä–æ–≤. –ü–µ—Ä–≤—ã–µ —Ç—Ä–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –≤–ø–∏—Å–∞—Ç—å —Ç–∞–∫–∏–º–∏, –∫–∞–∫ –µ—Å—Ç—å —Ç—É—Ç
async def intel(bot, message, admins, silence: bool):
    user = str(message.from_user.id)
    if user not in admins:
        for i in admins:
            await bot.send_message(text=f'{message.text} id{user} {message.from_user.full_name}'
                                        f' @{message.from_user.username}', chat_id=i, disable_notification=silence)



